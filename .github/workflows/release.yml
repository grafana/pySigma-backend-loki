name: Release to PyPI
permissions: {}
on:
  release:
    types: [published]
  push:
    tags:
      - v*.*.*

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10' # quoted as otherwise yaml treats as a number
      - name: Install Poetry
        uses: abatilo/actions-poetry@3765cf608f2d4a72178a9fc5b918668e542b89b1 # v4.0.0
        with:
          poetry-version: '1.8'
      - name: Verify versioning
        run: |
          [ "$(poetry version -s)" == "${GITHUB_REF#refs/tags/v}" ]
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest
      - name: Build packages
        run: poetry build
      - name: Get service account token for PyPI
        uses: grafana/shared-workflows/actions/get-vault-secrets@main
        with:
          repo_secrets: |
            TEST_PYPI_API_TOKEN=pypi-deploy:pypi_test
            PYPI_API_TOKEN=pypi-deploy:pypi_main
      - name: Configure Poetry
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi "${{ env.TEST_PYPI_API_TOKEN }}"
          poetry config pypi-token.pypi "${{ env.PYPI_API_TOKEN }}"
      - name: Publish to test PyPI
        if: ${{ github.event_name == 'push' }}
        run: poetry publish -r testpypi
      - name: Publish to PyPI
        if: ${{ github.event_name == 'release' }}
        run: poetry publish
